// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/seat.proto

package vulcanlabs_assignment

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Seat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Row           int32                  `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Col           int32                  `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
	Reserved      bool                   `protobuf:"varint,3,opt,name=reserved,proto3" json:"reserved,omitempty"`
	Blocked       bool                   `protobuf:"varint,4,opt,name=blocked,proto3" json:"blocked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Seat) Reset() {
	*x = Seat{}
	mi := &file_proto_seat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_proto_seat_proto_rawDescGZIP(), []int{0}
}

func (x *Seat) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *Seat) GetCol() int32 {
	if x != nil {
		return x.Col
	}
	return 0
}

func (x *Seat) GetReserved() bool {
	if x != nil {
		return x.Reserved
	}
	return false
}

func (x *Seat) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

type ReserveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seat          []*Seat                `protobuf:"bytes,1,rep,name=seat,proto3" json:"seat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveRequest) Reset() {
	*x = ReserveRequest{}
	mi := &file_proto_seat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveRequest) ProtoMessage() {}

func (x *ReserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveRequest.ProtoReflect.Descriptor instead.
func (*ReserveRequest) Descriptor() ([]byte, []int) {
	return file_proto_seat_proto_rawDescGZIP(), []int{1}
}

func (x *ReserveRequest) GetSeat() []*Seat {
	if x != nil {
		return x.Seat
	}
	return nil
}

type ReserveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*Seat                `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveResponse) Reset() {
	*x = ReserveResponse{}
	mi := &file_proto_seat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveResponse) ProtoMessage() {}

func (x *ReserveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveResponse.ProtoReflect.Descriptor instead.
func (*ReserveResponse) Descriptor() ([]byte, []int) {
	return file_proto_seat_proto_rawDescGZIP(), []int{2}
}

func (x *ReserveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReserveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReserveResponse) GetData() []*Seat {
	if x != nil {
		return x.Data
	}
	return nil
}

type SeatRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Available     []bool                 `protobuf:"varint,1,rep,packed,name=available,proto3" json:"available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeatRow) Reset() {
	*x = SeatRow{}
	mi := &file_proto_seat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeatRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatRow) ProtoMessage() {}

func (x *SeatRow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatRow.ProtoReflect.Descriptor instead.
func (*SeatRow) Descriptor() ([]byte, []int) {
	return file_proto_seat_proto_rawDescGZIP(), []int{3}
}

func (x *SeatRow) GetAvailable() []bool {
	if x != nil {
		return x.Available
	}
	return nil
}

type SeatMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seats         []*Seat                `protobuf:"bytes,1,rep,name=seats,proto3" json:"seats,omitempty"`
	MinDistance   int32                  `protobuf:"varint,2,opt,name=min_distance,json=minDistance,proto3" json:"min_distance,omitempty"`
	NumRow        int32                  `protobuf:"varint,3,opt,name=num_row,json=numRow,proto3" json:"num_row,omitempty"`
	NumCol        int32                  `protobuf:"varint,4,opt,name=num_col,json=numCol,proto3" json:"num_col,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeatMap) Reset() {
	*x = SeatMap{}
	mi := &file_proto_seat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeatMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatMap) ProtoMessage() {}

func (x *SeatMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatMap.ProtoReflect.Descriptor instead.
func (*SeatMap) Descriptor() ([]byte, []int) {
	return file_proto_seat_proto_rawDescGZIP(), []int{4}
}

func (x *SeatMap) GetSeats() []*Seat {
	if x != nil {
		return x.Seats
	}
	return nil
}

func (x *SeatMap) GetMinDistance() int32 {
	if x != nil {
		return x.MinDistance
	}
	return 0
}

func (x *SeatMap) GetNumRow() int32 {
	if x != nil {
		return x.NumRow
	}
	return 0
}

func (x *SeatMap) GetNumCol() int32 {
	if x != nil {
		return x.NumCol
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_seat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_seat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_seat_proto_rawDescGZIP(), []int{5}
}

var File_proto_seat_proto protoreflect.FileDescriptor

const file_proto_seat_proto_rawDesc = "" +
	"\n" +
	"\x10proto/seat.proto\"`\n" +
	"\x04Seat\x12\x10\n" +
	"\x03row\x18\x01 \x01(\x05R\x03row\x12\x10\n" +
	"\x03col\x18\x02 \x01(\x05R\x03col\x12\x1a\n" +
	"\breserved\x18\x03 \x01(\bR\breserved\x12\x18\n" +
	"\ablocked\x18\x04 \x01(\bR\ablocked\"+\n" +
	"\x0eReserveRequest\x12\x19\n" +
	"\x04seat\x18\x01 \x03(\v2\x05.SeatR\x04seat\"`\n" +
	"\x0fReserveResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x19\n" +
	"\x04data\x18\x03 \x03(\v2\x05.SeatR\x04data\"'\n" +
	"\aSeatRow\x12\x1c\n" +
	"\tavailable\x18\x01 \x03(\bR\tavailable\"{\n" +
	"\aSeatMap\x12\x1b\n" +
	"\x05seats\x18\x01 \x03(\v2\x05.SeatR\x05seats\x12!\n" +
	"\fmin_distance\x18\x02 \x01(\x05R\vminDistance\x12\x17\n" +
	"\anum_row\x18\x03 \x01(\x05R\x06numRow\x12\x17\n" +
	"\anum_col\x18\x04 \x01(\x05R\x06numCol\"\a\n" +
	"\x05Empty2\x95\x01\n" +
	"\x16SeatReservationService\x12-\n" +
	"\x11GetAvailableSeats\x12\x06.Empty\x1a\x10.ReserveResponse\x12,\n" +
	"\aReserve\x12\x0f.ReserveRequest\x1a\x10.ReserveResponse\x12\x1e\n" +
	"\n" +
	"GetSeatMap\x12\x06.Empty\x1a\b.SeatMapB/Z-github.com/viethapascal/vulcanlabs-assignmentb\x06proto3"

var (
	file_proto_seat_proto_rawDescOnce sync.Once
	file_proto_seat_proto_rawDescData []byte
)

func file_proto_seat_proto_rawDescGZIP() []byte {
	file_proto_seat_proto_rawDescOnce.Do(func() {
		file_proto_seat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_seat_proto_rawDesc), len(file_proto_seat_proto_rawDesc)))
	})
	return file_proto_seat_proto_rawDescData
}

var file_proto_seat_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_seat_proto_goTypes = []any{
	(*Seat)(nil),            // 0: Seat
	(*ReserveRequest)(nil),  // 1: ReserveRequest
	(*ReserveResponse)(nil), // 2: ReserveResponse
	(*SeatRow)(nil),         // 3: SeatRow
	(*SeatMap)(nil),         // 4: SeatMap
	(*Empty)(nil),           // 5: Empty
}
var file_proto_seat_proto_depIdxs = []int32{
	0, // 0: ReserveRequest.seat:type_name -> Seat
	0, // 1: ReserveResponse.data:type_name -> Seat
	0, // 2: SeatMap.seats:type_name -> Seat
	5, // 3: SeatReservationService.GetAvailableSeats:input_type -> Empty
	1, // 4: SeatReservationService.Reserve:input_type -> ReserveRequest
	5, // 5: SeatReservationService.GetSeatMap:input_type -> Empty
	2, // 6: SeatReservationService.GetAvailableSeats:output_type -> ReserveResponse
	2, // 7: SeatReservationService.Reserve:output_type -> ReserveResponse
	4, // 8: SeatReservationService.GetSeatMap:output_type -> SeatMap
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_seat_proto_init() }
func file_proto_seat_proto_init() {
	if File_proto_seat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_seat_proto_rawDesc), len(file_proto_seat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_seat_proto_goTypes,
		DependencyIndexes: file_proto_seat_proto_depIdxs,
		MessageInfos:      file_proto_seat_proto_msgTypes,
	}.Build()
	File_proto_seat_proto = out.File
	file_proto_seat_proto_goTypes = nil
	file_proto_seat_proto_depIdxs = nil
}
